// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCosmetic.Scaffold;

namespace WebCosmetic.Migrations
{
    [DbContext(typeof(QL_COSMETICContext))]
    partial class QL_COSMETICContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("WebCosmetic.Models.CosmeticModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Chitiethoadon", b =>
                {
                    b.Property<string>("Mahd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("mahd")
                        .IsFixedLength(true);

                    b.Property<string>("Masp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("masp")
                        .IsFixedLength(true);

                    b.Property<int?>("Soluong")
                        .HasColumnType("int")
                        .HasColumnName("soluong");

                    b.Property<decimal?>("Thanhtien")
                        .HasColumnType("money")
                        .HasColumnName("thanhtien");

                    b.HasKey("Mahd", "Masp")
                        .HasName("pk_cthd");

                    b.HasIndex("Masp");

                    b.ToTable("CHITIETHOADON");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Congty", b =>
                {
                    b.Property<string>("Macongty")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("macongty")
                        .IsFixedLength(true);

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("diachi");

                    b.Property<string>("Tencongty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tencongty");

                    b.HasKey("Macongty")
                        .HasName("pk_mact");

                    b.ToTable("CONGTY");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Cungcap", b =>
                {
                    b.Property<string>("Macongty")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("macongty")
                        .IsFixedLength(true);

                    b.Property<string>("Masp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("masp")
                        .IsFixedLength(true);

                    b.Property<DateTime>("Ngaynhap")
                        .HasColumnType("date")
                        .HasColumnName("ngaynhap");

                    b.Property<int?>("Soluongcc")
                        .HasColumnType("int")
                        .HasColumnName("soluongcc");

                    b.HasKey("Macongty", "Masp", "Ngaynhap")
                        .HasName("pk_cungcap");

                    b.HasIndex("Masp");

                    b.ToTable("CUNGCAP");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Danhgia", b =>
                {
                    b.Property<string>("Masp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("masp")
                        .IsFixedLength(true);

                    b.Property<string>("Maloai")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("maloai")
                        .IsFixedLength(true);

                    b.Property<int?>("Sophanhoi")
                        .HasColumnType("int")
                        .HasColumnName("sophanhoi");

                    b.Property<int?>("Sosao")
                        .HasColumnType("int")
                        .HasColumnName("sosao");

                    b.HasKey("Masp", "Maloai")
                        .HasName("pk_danhgia");

                    b.ToTable("DANHGIA");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Dexuatkhuyenmai", b =>
                {
                    b.Property<string>("Masp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("masp")
                        .IsFixedLength(true);

                    b.Property<string>("Maloai")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("maloai")
                        .IsFixedLength(true);

                    b.HasKey("Masp", "Maloai")
                        .HasName("pk_dexuatkk");

                    b.HasIndex("Maloai");

                    b.ToTable("DEXUATKHUYENMAI");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Dexuatmua", b =>
                {
                    b.Property<string>("Masp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("masp")
                        .IsFixedLength(true);

                    b.HasKey("Masp")
                        .HasName("pk_dxm");

                    b.ToTable("DEXUATMUA");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Hoadon", b =>
                {
                    b.Property<string>("Mahd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("mahd")
                        .IsFixedLength(true);

                    b.Property<string>("Makh")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("makh")
                        .IsFixedLength(true);

                    b.Property<string>("Manv")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("manv")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Tongtien")
                        .HasColumnType("money")
                        .HasColumnName("tongtien");

                    b.HasKey("Mahd")
                        .HasName("pk_mahd");

                    b.HasIndex("Manv");

                    b.ToTable("HOADON");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Hoadonvanchuyen", b =>
                {
                    b.Property<string>("Magiaovan")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("magiaovan")
                        .IsFixedLength(true);

                    b.Property<double?>("Khoangcach")
                        .HasColumnType("float")
                        .HasColumnName("khoangcach");

                    b.Property<string>("Madichvu")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("madichvu")
                        .IsFixedLength(true);

                    b.Property<string>("Mahd")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("mahd")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Tongthanhtoan")
                        .HasColumnType("money")
                        .HasColumnName("tongthanhtoan");

                    b.HasKey("Magiaovan")
                        .HasName("pk_hdvc");

                    b.HasIndex("Mahd");

                    b.ToTable("HOADONVANCHUYEN");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Hotrothanhtoan", b =>
                {
                    b.Property<string>("Manganhang")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("manganhang")
                        .IsFixedLength(true);

                    b.Property<string>("Diachi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("diachi");

                    b.Property<string>("Tennganhang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tennganhang");

                    b.HasKey("Manganhang")
                        .HasName("pk_manganhang");

                    b.ToTable("HOTROTHANHTOAN");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Hotrovanchuyen", b =>
                {
                    b.Property<string>("Madichvu")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("madichvu")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Chiphi")
                        .HasColumnType("money")
                        .HasColumnName("chiphi");

                    b.Property<string>("Tendichvu")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("tendichvu");

                    b.HasKey("Madichvu")
                        .HasName("pk_ma_dv");

                    b.ToTable("HOTROVANCHUYEN");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Khachhang", b =>
                {
                    b.Property<string>("Makh")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("makh")
                        .IsFixedLength(true);

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("Ngaysinh")
                        .HasColumnType("date")
                        .HasColumnName("ngaysinh");

                    b.Property<string>("Sdt")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("sdt")
                        .IsFixedLength(true);

                    b.Property<string>("Tenkh")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("tenkh");

                    b.HasKey("Makh")
                        .HasName("pk_makh");

                    b.ToTable("KHACHHANG");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Kiemke", b =>
                {
                    b.Property<string>("Masp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("masp")
                        .IsFixedLength(true);

                    b.Property<string>("Maloai")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("maloai")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Ngaykiemke")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("ngaykiemke")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Slconlai")
                        .HasColumnType("int")
                        .HasColumnName("slconlai");

                    b.Property<int?>("Sldaban")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sldaban")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Tinhtrang")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("tinhtrang")
                        .HasDefaultValueSql("(N'Ổn định')");

                    b.HasKey("Masp", "Maloai")
                        .HasName("pk_kiemke");

                    b.ToTable("KIEMKE");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Loaisanpham", b =>
                {
                    b.Property<string>("Maloai")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("maloai")
                        .IsFixedLength(true);

                    b.Property<string>("Macongty")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("macongty")
                        .IsFixedLength(true);

                    b.Property<string>("Tenloai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tenloai");

                    b.HasKey("Maloai")
                        .HasName("pk_maloai");

                    b.HasIndex("Macongty");

                    b.ToTable("LOAISANPHAM");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Nhanthongbao", b =>
                {
                    b.Property<string>("Makh")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("makh")
                        .IsFixedLength(true);

                    b.Property<DateTime>("Ngaydk")
                        .HasColumnType("date")
                        .HasColumnName("ngaydk");

                    b.HasKey("Makh")
                        .HasName("pk_nhantb");

                    b.ToTable("NHANTHONGBAO");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Nhanvien", b =>
                {
                    b.Property<string>("Manv")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("manv")
                        .IsFixedLength(true);

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("diachi");

                    b.Property<string>("Kinhnghiem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("kinhnghiem");

                    b.Property<DateTime?>("Ngaysinh")
                        .HasColumnType("date")
                        .HasColumnName("ngaysinh");

                    b.Property<string>("Tennv")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("tennv");

                    b.HasKey("Manv")
                        .HasName("pk_manv");

                    b.ToTable("NHANVIEN");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Sanpham", b =>
                {
                    b.Property<string>("Masp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("masp")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Giaban")
                        .HasColumnType("money")
                        .HasColumnName("giaban");

                    b.Property<DateTime?>("Hsd")
                        .HasColumnType("date")
                        .HasColumnName("hsd");

                    b.Property<string>("Maloai")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("maloai")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Nsx")
                        .HasColumnType("date")
                        .HasColumnName("nsx");

                    b.Property<string>("Tensp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tensp");

                    b.HasKey("Masp")
                        .HasName("pk_masp");

                    b.HasIndex("Maloai");

                    b.ToTable("SANPHAM");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Sukien", b =>
                {
                    b.Property<string>("Mask")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("mask")
                        .IsFixedLength(true);

                    b.Property<string>("Manv")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("manv")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Ngaybd")
                        .HasColumnType("date")
                        .HasColumnName("ngaybd");

                    b.Property<DateTime?>("Ngaykt")
                        .HasColumnType("date")
                        .HasColumnName("ngaykt");

                    b.Property<string>("Tensk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tensk");

                    b.HasKey("Mask")
                        .HasName("pk_sukien");

                    b.HasIndex("Manv");

                    b.ToTable("SUKIEN");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Thanhtoan", b =>
                {
                    b.Property<string>("Magiaodich")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("magiaodich")
                        .IsFixedLength(true);

                    b.Property<string>("Makh")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("makh")
                        .IsFixedLength(true);

                    b.Property<string>("Manganhang")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("manganhang")
                        .IsFixedLength(true);

                    b.Property<string>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("trangthai")
                        .HasDefaultValueSql("(N'Chưa thanh toán')");

                    b.HasKey("Magiaodich")
                        .HasName("pk_thanhtoan");

                    b.HasIndex("Makh");

                    b.HasIndex("Manganhang");

                    b.ToTable("THANHTOAN");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Thekhuyenmai", b =>
                {
                    b.Property<string>("Mathe")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("mathe")
                        .IsFixedLength(true);

                    b.Property<double?>("Giatri")
                        .HasColumnType("float")
                        .HasColumnName("giatri");

                    b.Property<string>("Makh")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("makh")
                        .IsFixedLength(true);

                    b.Property<string>("Mask")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("mask")
                        .IsFixedLength(true);

                    b.Property<string>("Trangthai")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("trangthai")
                        .IsFixedLength(true);

                    b.HasKey("Mathe")
                        .HasName("pk_thekm");

                    b.HasIndex("Makh");

                    b.HasIndex("Mask");

                    b.ToTable("THEKHUYENMAI");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Thongbao", b =>
                {
                    b.Property<string>("Mask")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("mask")
                        .IsFixedLength(true);

                    b.Property<string>("Makh")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("makh")
                        .IsFixedLength(true);

                    b.Property<string>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("trangthai")
                        .HasDefaultValueSql("(N'Chưa thông báo')");

                    b.HasKey("Mask", "Makh")
                        .HasName("pk_thongbao");

                    b.HasIndex("Makh");

                    b.ToTable("THONGBAO");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebCosmetic.Models.CosmeticModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebCosmetic.Models.CosmeticModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebCosmetic.Models.CosmeticModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebCosmetic.Models.CosmeticModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Chitiethoadon", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Hoadon", "MahdNavigation")
                        .WithMany("Chitiethoadons")
                        .HasForeignKey("Mahd")
                        .HasConstraintName("fk_mahd_cthd")
                        .IsRequired();

                    b.HasOne("WebCosmetic.Scaffold.Sanpham", "MaspNavigation")
                        .WithMany("Chitiethoadons")
                        .HasForeignKey("Masp")
                        .HasConstraintName("fk_masp_cthd")
                        .IsRequired();

                    b.Navigation("MahdNavigation");

                    b.Navigation("MaspNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Cungcap", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Congty", "MacongtyNavigation")
                        .WithMany("Cungcaps")
                        .HasForeignKey("Macongty")
                        .HasConstraintName("fk_mact_cc")
                        .IsRequired();

                    b.HasOne("WebCosmetic.Scaffold.Sanpham", "MaspNavigation")
                        .WithMany("Cungcaps")
                        .HasForeignKey("Masp")
                        .HasConstraintName("fk_masp_cc")
                        .IsRequired();

                    b.Navigation("MacongtyNavigation");

                    b.Navigation("MaspNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Danhgia", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Sanpham", "MaspNavigation")
                        .WithMany("Danhgia")
                        .HasForeignKey("Masp")
                        .HasConstraintName("fk_masp_dg")
                        .IsRequired();

                    b.Navigation("MaspNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Dexuatkhuyenmai", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Loaisanpham", "MaloaiNavigation")
                        .WithMany("Dexuatkhuyenmais")
                        .HasForeignKey("Maloai")
                        .HasConstraintName("fk_maloai_dxkm")
                        .IsRequired();

                    b.HasOne("WebCosmetic.Scaffold.Sanpham", "MaspNavigation")
                        .WithMany("Dexuatkhuyenmais")
                        .HasForeignKey("Masp")
                        .HasConstraintName("fk_masp_dxkm")
                        .IsRequired();

                    b.Navigation("MaloaiNavigation");

                    b.Navigation("MaspNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Dexuatmua", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Sanpham", "MaspNavigation")
                        .WithOne("Dexuatmua")
                        .HasForeignKey("WebCosmetic.Scaffold.Dexuatmua", "Masp")
                        .HasConstraintName("fk_masp_dxm")
                        .IsRequired();

                    b.Navigation("MaspNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Hoadon", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Nhanvien", "ManvNavigation")
                        .WithMany("Hoadons")
                        .HasForeignKey("Manv")
                        .HasConstraintName("fk_manv_hd")
                        .IsRequired();

                    b.Navigation("ManvNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Hoadonvanchuyen", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Hoadon", "MahdNavigation")
                        .WithMany("Hoadonvanchuyens")
                        .HasForeignKey("Mahd")
                        .HasConstraintName("fk_mahd")
                        .IsRequired();

                    b.Navigation("MahdNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Loaisanpham", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Congty", "MacongtyNavigation")
                        .WithMany("Loaisanphams")
                        .HasForeignKey("Macongty")
                        .HasConstraintName("fk_mact_lsp")
                        .IsRequired();

                    b.Navigation("MacongtyNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Nhanthongbao", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Khachhang", "MakhNavigation")
                        .WithOne("Nhanthongbao")
                        .HasForeignKey("WebCosmetic.Scaffold.Nhanthongbao", "Makh")
                        .HasConstraintName("fk_makh_ntb")
                        .IsRequired();

                    b.Navigation("MakhNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Sanpham", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Loaisanpham", "MaloaiNavigation")
                        .WithMany("Sanphams")
                        .HasForeignKey("Maloai")
                        .HasConstraintName("fk_maloai_sp")
                        .IsRequired();

                    b.Navigation("MaloaiNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Sukien", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Nhanvien", "ManvNavigation")
                        .WithMany("Sukiens")
                        .HasForeignKey("Manv")
                        .HasConstraintName("fk_msnv_sk")
                        .IsRequired();

                    b.Navigation("ManvNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Thanhtoan", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Khachhang", "MakhNavigation")
                        .WithMany("Thanhtoans")
                        .HasForeignKey("Makh")
                        .HasConstraintName("fk_makh_thanhtoan")
                        .IsRequired();

                    b.HasOne("WebCosmetic.Scaffold.Hotrothanhtoan", "ManganhangNavigation")
                        .WithMany("Thanhtoans")
                        .HasForeignKey("Manganhang")
                        .HasConstraintName("fk_nh_thanhtoan")
                        .IsRequired();

                    b.Navigation("MakhNavigation");

                    b.Navigation("ManganhangNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Thekhuyenmai", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Khachhang", "MakhNavigation")
                        .WithMany("Thekhuyenmais")
                        .HasForeignKey("Makh")
                        .HasConstraintName("fk_makh_tkm");

                    b.HasOne("WebCosmetic.Scaffold.Sukien", "MaskNavigation")
                        .WithMany("Thekhuyenmais")
                        .HasForeignKey("Mask")
                        .HasConstraintName("fk_mask_tkm");

                    b.Navigation("MakhNavigation");

                    b.Navigation("MaskNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Thongbao", b =>
                {
                    b.HasOne("WebCosmetic.Scaffold.Khachhang", "MakhNavigation")
                        .WithMany("Thongbaos")
                        .HasForeignKey("Makh")
                        .HasConstraintName("fk_makh_tb")
                        .IsRequired();

                    b.HasOne("WebCosmetic.Scaffold.Sukien", "MaskNavigation")
                        .WithMany("Thongbaos")
                        .HasForeignKey("Mask")
                        .HasConstraintName("fk_mask_tb")
                        .IsRequired();

                    b.Navigation("MakhNavigation");

                    b.Navigation("MaskNavigation");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Congty", b =>
                {
                    b.Navigation("Cungcaps");

                    b.Navigation("Loaisanphams");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Hoadon", b =>
                {
                    b.Navigation("Chitiethoadons");

                    b.Navigation("Hoadonvanchuyens");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Hotrothanhtoan", b =>
                {
                    b.Navigation("Thanhtoans");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Khachhang", b =>
                {
                    b.Navigation("Nhanthongbao");

                    b.Navigation("Thanhtoans");

                    b.Navigation("Thekhuyenmais");

                    b.Navigation("Thongbaos");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Loaisanpham", b =>
                {
                    b.Navigation("Dexuatkhuyenmais");

                    b.Navigation("Sanphams");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Nhanvien", b =>
                {
                    b.Navigation("Hoadons");

                    b.Navigation("Sukiens");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Sanpham", b =>
                {
                    b.Navigation("Chitiethoadons");

                    b.Navigation("Cungcaps");

                    b.Navigation("Danhgia");

                    b.Navigation("Dexuatkhuyenmais");

                    b.Navigation("Dexuatmua");
                });

            modelBuilder.Entity("WebCosmetic.Scaffold.Sukien", b =>
                {
                    b.Navigation("Thekhuyenmais");

                    b.Navigation("Thongbaos");
                });
#pragma warning restore 612, 618
        }
    }
}
